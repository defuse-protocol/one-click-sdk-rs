/*
 * 1Click Swap API
 *
 * API for One-Click Swaps
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QuoteResponse {
    /// Timestamp in ISO format that took part in deposit address derivation
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    /// Signature that means 1click service commit to quote and deposit address
    #[serde(rename = "signature")]
    pub signature: String,
    /// User request
    #[serde(rename = "quoteRequest")]
    pub quote_request: Box<models::QuoteRequest>,
    /// Response that contains deposit address for user to send \"amount\" of **originAsset** and possible output amount
    #[serde(rename = "quote")]
    pub quote: Box<models::Quote>,
}

impl QuoteResponse {
    pub fn new(timestamp: String, signature: String, quote_request: models::QuoteRequest, quote: models::Quote) -> QuoteResponse {
        QuoteResponse {
            timestamp,
            signature,
            quote_request: Box::new(quote_request),
            quote: Box::new(quote),
        }
    }
}

